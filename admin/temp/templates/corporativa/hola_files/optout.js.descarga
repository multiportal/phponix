clickdimensions.Analytics.prototype.cookieLife = 90;
clickdimensions.Analytics.prototype.cookieName = function() {
    var prefix = 'cd_optout_';
    if (typeof (window.optOutHostId) == "undefined") {
        return prefix + this.i;
    }

    return prefix + window.optOutHostId;
}

clickdimensions.Analytics.prototype.onOptIn = function () {
    this.trackPage();
    setCookie(this.cookieName(), false, this.cookieLife, this.i);
}

clickdimensions.Analytics.prototype.onOptOut = function () {
    setCookie(this.cookieName(), true, this.cookieLife, this.i);
}

clickdimensions.Analytics.prototype.optOutTracking = function (useOptOut) {

    if (useOptOut !== true) {
        this.trackPage();
        return;
    }

    var optOutValue = getCookie(this.cookieName());

    //already have a cookie
    if (optOutValue !== "") {

        //pressed ok
        if (optOutValue === "false") {
            this.trackPage();
        }

        return;
    }
    var settings = typeof (window.optOutSettings) == "undefined" ? {} : window.optOutSettings;
    var defaultSettings = {
        text: 'Our website uses tracking technologies to learn how our visitors interact with our site so that we can improve our services and provide ' +
        'you with valuable content. <a href="#" id="stopTracking" style="color: #0b8be3">Disable Tracking</a>.',
        optedOutText: 'Tracking for this website has been disabled in this browser.',
        backgroundgColor: 'white',
        fontColor: '#283541',
        fontFamily: 'arial, sans-serif',
        fontSize: '14px',
        okButttonText: 'OK',
        okButttonBackgroundColor: '#0b8be3',
        okButttonTextColor: '#fff',
        okButttonWidth: 'auto',
        daysToKeepTheAnswer: 183
    };

    var mergedSettings = extend(defaultSettings, settings);
    this.cookieLife = mergedSettings.daysToKeepTheAnswer;
    var self = this;
    var popup = new Popup(this.onOptIn.bind(self), this.onOptOut.bind(self), mergedSettings);
    popup.show();
};

function extend(a, b) {
    for (var key in b)
        if (b.hasOwnProperty(key))
            a[key] = b[key];
    return a;
}

function setCookie(cname, cvalue, exdays, domain) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
    var expires = "expires=" + d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";domain=." + domain + ";path=/";
}

function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}

function append(elString) {
    var div = document.createElement("div");
    div.innerHTML = elString;
    document.body.appendChild(div.firstChild);
}

var Popup = function (okCallback, cancellCallback, settings) {
    var self = this;
    this.okCallback = okCallback;
    this.cancellCallback = cancellCallback;
    this.settings = settings;
    this.stepContent = function (stepText, okButtonId) {

        var template = '<div style="width: 80%; padding: 25px; font-family:' + self.settings.fontFamily + '; font-size: ' + self.settings.fontSize + '; line-height: 1.6;overflow: auto;padding: 20px 50px 20px 20px;color:' + self.settings.fontColor + '">' +
            stepText +
            '<div style="padding-top:20px;">' +
            '<input type="button"  style="width:' + self.settings.okButttonWidth + ';padding: 12px 10px; background-color: ' + self.settings.okButttonBackgroundColor + ';font-size: ' + self.settings.fontSize + ';color: ' + self.settings.okButttonTextColor + '; border: 0px;min-width: 80px;" id="' + okButtonId + '" value="' + self.settings.okButttonText + '" />' +
            '</div>';
        return template;
    };

    this.show = function () {

        var popupData = '<div id="modal-overlay" style="position: fixed;top: 0;left: 0;width: 100%;height: 100%;z-index: 50;">' +
            ' <div id="modalMain"  style="display: block; width: 100%; position: fixed;z-index: 100;bottom: 0; right:0; background: ' + self.settings.backgroundgColor + '; border: solid 1px #f2f2f2; -webkit-box-shadow: 0px -1px 10px 0px rgba(74,74,74,0.1); -moz-box-shadow: 0px -1px 10px 0px rgba(74,74,74,0.1);box-shadow: 0px -1px 10px 0px rgba(74,74,74,0.1);"> ' +
            self.stepContent(self.settings.text, "trackMe") + '</div></div>';

        append(popupData);

        var trackMeButton = document.getElementById("trackMe");
        trackMeButton.addEventListener('click', trackFunc = function () {
            self.okCallback();
            self.hide();
            this.removeEventListener('click', trackFunc);
        });

        var stopTrackingButton = document.getElementById("stopTracking");

        stopTrackingButton.addEventListener('click', stopFunc = function () {
            self.cancellCallback();
            document.getElementById("modalMain").innerHTML = self.stepContent(self.settings.optedOutText, "hideMe");
            this.removeEventListener('click', stopFunc);
            var hideButton = document.getElementById("hideMe");
            hideButton.addEventListener('click', hideFunc = function () {
                self.hide();
                this.removeEventListener('click', hideFunc);

            });
        });

        this.hide = function () {
            document.body.removeChild(document.getElementById("modal-overlay"));
        }
    };
}